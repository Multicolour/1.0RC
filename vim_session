let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/www/node/multicolour
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +10 tests/pretty-error.spec.js
badd +38 package.json
badd +14 examples/basic/index.js
badd +46 lib/better-errors/config-error.js
badd +10 lib/uncaught-error-handlers.js
badd +48 schema/config/config.schema.json
badd +22 schema/config/api-service.schema.json
badd +105 schema/model.schema.json
badd +15 schema/config/database-service.schema.json
badd +1 lib/config/default-config.js
badd +42 lib/config/index.js
badd +18 lib/better-errors/ajv-syntax-or-reference-error.js
badd +5 flow/declarations/multicolour/config.flow.js
argglobal
silent! argdel *
edit schema/config/api-service.schema.json
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winminheight=1 winminwidth=1 winheight=1 winwidth=1
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 18 - ((17 * winheight(0) + 13) / 27)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
18
normal! 031|
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOF
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
